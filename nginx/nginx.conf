upstream frontier {
  server frontier:3000;
}

upstream storage {
  server s3:9000;
}

server {
  listen 80;

  server_name _;

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl_certificate               /etc/ssl/certs/ca.crt;
  ssl_certificate_key           /etc/ssl/certs/ca.key;
  ssl_protocols                 TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers     on;
  ssl_ciphers                   "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
  ssl_ecdh_curve                secp384r1;
  ssl_session_cache             shared:SSL:10m;
  ssl_session_tickets           off;
  ssl_stapling                  off;
  resolver                      8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout              5s;

  add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;

  location /storage {
    rewrite /storage/(.*) /$1 break;

    proxy_redirect     off;
    proxy_set_header   Host $host;

    proxy_pass         http://storage;
  }

  root /var/www;

  location = / {
      try_files /index.html =404;
  }

  location = /index.css {
      try_files /index.css =404;
  }

  location / {
    proxy_redirect     off;
    proxy_set_header   Host $host;
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Host $server_name;
    proxy_set_header   X-Forwarded-Proto https;
    proxy_set_header   X-Forwarded-Server $host;

    proxy_pass         http://frontier;
  }
}
