[{"tokens": ["NAME", "FNINVOK", "(", "NAME", ")", ":", "COMMENT", "COMMENT", "COMMENT", "NAME", ".", "NAME", "=", "FNINVOK", "(", "NAME", "=", "NAME", ")", "NAME", ".", "NAME", "=", "FNINVOK", "(", "NAME", "=", "NAME", ")", "NAME", ".", "NAME", "=", "{", "}", "NAME", ".", "NAME", "=", "{", "}", "NAME", ".", "NAME", "=", "FNINVOK", "(", ")", "NAME", ".", "NAME", "=", "\"\"", "NAME", ".", "NAME", "=", "\"\"", "NAME", ".", "NAME", "=", "NAME", "NAME", ".", "NAME", "=", "NAME", "NAME", ".", "NAME", "=", "NAME", "NAME", ".", "NAME", "=", "NAME"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "__init__", "functionStart": 59, "functionEnd": 75}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ")", ":", "NAME", "NAME", ".", "NAME", "NAME", "NAME", "NAME", "NAME", "NAME", ".", "FNINVOK", "(", ")", ":", "return", "\"<%s>\"", "%", "NAME", ".", "NAME", ".", "NAME", "return", "\"<%s: %s %r>\"", "%", "(", "NAME", ".", "NAME", ".", "NAME", ",", "NAME", ".", "NAME", ",", "NAME", ".", "FNINVOK", "(", ")", ",", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "__repr__", "functionStart": 77, "functionEnd": 84}}, {"tokens": ["@", "NAME", "NAME", "FNINVOK", "(", "NAME", ")", ":", "return", "FNINVOK", "(", "NAME", ".", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "headers", "functionStart": 87, "functionEnd": 88}}, {"tokens": ["@", "NAME", "NAME", "FNINVOK", "(", "NAME", ")", ":", "\"\"\"Return a list of MediaType instances.\"\"\"", "return", "NAME", "(", "NAME", ".", "NAME", ".", "FNINVOK", "(", "\"Accept\"", ",", "\"*/*\"", ")", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "accepted_types", "functionStart": 91, "functionEnd": 93}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", ")", ":", "return", "NAME", "(", "NAME", ".", "FNINVOK", "(", "NAME", ")", "NAME", "NAME", "NAME", "NAME", ".", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "accepts", "functionStart": 95, "functionEnd": 98}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", ")", ":", "\"\"\"Set content_type, content_params, and encoding.\"\"\"", "NAME", ".", "NAME", ",", "NAME", ".", "NAME", "=", "NAME", "(", "NAME", ".", "FNINVOK", "(", "\"CONTENT_TYPE\"", ",", "\"\"", ")", ")", "NAME", "\"charset\"", "NAME", "NAME", ".", "NAME", ":", "NAME", ":", "NAME", ".", "FNINVOK", "(", "NAME", ".", "NAME", "[", "\"charset\"", "]", ")", "NAME", "NAME", ":", "NAME", "NAME", ":", "NAME", ".", "NAME", "=", "NAME", ".", "NAME", "[", "\"charset\"", "]"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "_set_content_type_params", "functionStart": 100, "functionEnd": 111}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ")", ":", "\"\"\"\n        Return the HTTP host using the environment or request headers. Skip\n        allowed hosts protection, so may return an insecure host.\n        \"\"\"", "COMMENT", "NAME", "NAME", ".", "NAME", "FNINVOK", "(", "\"HTTP_X_FORWARDED_HOST\"", "NAME", "NAME", ".", "NAME", ")", ":", "NAME", "=", "NAME", ".", "NAME", "[", "\"HTTP_X_FORWARDED_HOST\"", "]", "NAME", "\"HTTP_HOST\"", "NAME", "NAME", ".", "NAME", ":", "NAME", "=", "NAME", ".", "NAME", "[", "\"HTTP_HOST\"", "]", "NAME", ":", "COMMENT", "NAME", "=", "NAME", ".", "NAME", "[", "\"SERVER_NAME\"", "]", "NAME", "=", "NAME", ".", "FNINVOK", "(", ")", "NAME", "NAME", "!=", "(", "\"443\"", "NAME", "NAME", ".", "FNINVOK", "(", ")", "NAME", "\"80\"", ")", ":", "NAME", "=", "\"%s:%s\"", "%", "(", "NAME", ",", "NAME", ")", "return", "NAME"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "_get_raw_host", "functionStart": 113, "functionEnd": 129}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ")", ":", "\"\"\"Return the HTTP host using the environment or request headers.\"\"\"", "NAME", "=", "NAME", ".", "FNINVOK", "(", ")", "COMMENT", "NAME", "=", "NAME", ".", "NAME", "NAME", "NAME", ".", "NAME", "NAME", "NAME", "NAME", ":", "NAME", "=", "[", "\".localhost\"", ",", "\"127.0.0.1\"", ",", "\"[::1]\"", "]", "NAME", ",", "NAME", "=", "FNINVOK", "(", "NAME", ")", "NAME", "NAME", "NAME", "FNINVOK", "(", "NAME", ",", "NAME", ")", ":", "return", "NAME", "NAME", ":", "NAME", "=", "\"Invalid HTTP_HOST header: %r.\"", "%", "NAME", "NAME", "NAME", ":", "NAME", "+=", "\" You may need to add %r to ALLOWED_HOSTS.\"", "%", "NAME", "NAME", ":", "NAME", "+=", "(", "\" The domain name provided is not valid according to RFC 1034/1035.\"", ")", "NAME", "FNINVOK", "(", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "get_host", "functionStart": 131, "functionEnd": 151}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ")", ":", "\"\"\"Return the port number for the request as a string.\"\"\"", "NAME", "NAME", ".", "NAME", "NAME", "\"HTTP_X_FORWARDED_PORT\"", "NAME", "NAME", ".", "NAME", ":", "NAME", "=", "NAME", ".", "NAME", "[", "\"HTTP_X_FORWARDED_PORT\"", "]", "NAME", ":", "NAME", "=", "NAME", ".", "NAME", "[", "\"SERVER_PORT\"", "]", "return", "FNINVOK", "(", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "get_port", "functionStart": 153, "functionEnd": 159}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", "=", "NAME", ")", ":", "return", "NAME", ".", "FNINVOK", "(", "NAME", ".", "NAME", ",", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "get_full_path", "functionStart": 161, "functionEnd": 162}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", "=", "NAME", ")", ":", "return", "NAME", ".", "FNINVOK", "(", "NAME", ".", "NAME", ",", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "get_full_path_info", "functionStart": 164, "functionEnd": 165}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", ",", "NAME", ")", ":", "COMMENT", "COMMENT", "return", "\"%s%s%s\"", "%", "(", "FNINVOK", "(", "NAME", ")", ",", "\"/\"", "NAME", "NAME", "NAME", "NAME", "NAME", ".", "FNINVOK", "(", "\"/\"", ")", "NAME", "\"\"", ",", "(", "(", "\"?\"", "+", "NAME", "(", "NAME", ".", "NAME", ".", "FNINVOK", "(", "\"QUERY_STRING\"", ",", "\"\"", ")", ")", ")", "NAME", "NAME", ".", "NAME", ".", "FNINVOK", "(", "\"QUERY_STRING\"", ",", "\"\"", ")", "NAME", "\"\"", ")", ",", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "_get_full_path", "functionStart": 167, "functionEnd": 178}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", ",", "NAME", "=", "NAME", ",", "NAME", "=", "\"\"", ",", "NAME", "=", "NAME", ")", ":", "\"\"\"\n        Attempt to return a signed cookie. If the signature fails or the\n        cookie has expired, raise an exception, unless the `default` argument\n        is provided,  in which case return that value.\n        \"\"\"", "NAME", ":", "NAME", "=", "NAME", ".", "NAME", "[", "NAME", "]", "NAME", "NAME", ":", "NAME", "NAME", "NAME", "NAME", "NAME", ":", "return", "NAME", "NAME", ":", "NAME", "NAME", ":", "NAME", "=", "NAME", ".", "FNINVOK", "(", "NAME", "=", "NAME", "+", "NAME", ")", ".", "FNINVOK", "(", "NAME", ",", "NAME", "=", "NAME", ")", "NAME", "NAME", ".", "NAME", ":", "NAME", "NAME", "NAME", "NAME", "NAME", ":", "return", "NAME", "NAME", ":", "NAME", "return", "NAME"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "get_signed_cookie", "functionStart": 180, "functionEnd": 202}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ",", "NAME", "=", "NAME", ")", ":", "\"\"\"\n        Build an absolute URI from the location and the variables available in\n        this request. If no ``location`` is specified, build the absolute URI\n        using request.get_full_path(). If the location is absolute, convert it\n        to an RFC 3987 compliant URI and return it. If location is relative or\n        is scheme-relative (i.e., ``//example.com/``), urljoin() it to a base\n        URL constructed from the request variables.\n        \"\"\"", "NAME", "NAME", "NAME", "NAME", ":", "COMMENT", "COMMENT", "NAME", "=", "\"//%sreturn", "FNINVOK", "(", "NAME", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "build_absolute_uri", "functionStart": 204, "functionEnd": 241}}, {"tokens": ["@", "NAME", "NAME", "FNINVOK", "(", "NAME", ")", ":", "return", "\"{}://{}\"", ".", "NAME", "(", "NAME", ".", "NAME", ",", "NAME", ".", "FNINVOK", "(", ")", ")"], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "_current_scheme_host", "functionStart": 244, "functionEnd": 245}}, {"tokens": ["NAME", "FNINVOK", "(", "NAME", ")", ":", "\"\"\"\n        Hook for subclasses like WSGIRequest to implement. Return 'http' by\n        default.\n        \"\"\"", "return", "\"http\""], "identifier": {"revision": "test", "fileName": ".", "className": "HttpRequest", "functionName": "_get_scheme", "functionStart": 247, "functionEnd": 252}}]
